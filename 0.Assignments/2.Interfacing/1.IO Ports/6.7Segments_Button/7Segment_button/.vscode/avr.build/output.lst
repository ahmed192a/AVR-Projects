
d:\Github\AVR-Projects\0.Assignments\2.Interfacing\1.IO Ports\6.7Segments_Button\7Segment_button\.vscode\avr.build\output.elf:     file format elf32-avr


Disassembly of section .text:

00000000 <__vectors>:
__vector_default():
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
__ctors_end():
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 4a 00 	jmp	0x94	; 0x94 <_exit>

00000068 <__bad_interrupt>:
__vector_20():
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
Dio_Init():
d:\Github\AVR-Projects\0.Assignments\2.Interfacing\1.IO Ports\6.7Segments_Button\7Segment_button/main.c:51
 * @version 0.1
 * @author Ahmed Mohamed (ahmed.mohamed.eng.25@gmail.com)
 */
void Dio_Init(){
    // Port D pin 4 as input
    DDRD &= ~(1<<PD4);
  6c:	8c 98       	cbi	0x11, 4	; 17
d:\Github\AVR-Projects\0.Assignments\2.Interfacing\1.IO Ports\6.7Segments_Button\7Segment_button/main.c:54

    // port C first 4 pins as output
    DDRC |= 0x0F;
  6e:	84 b3       	in	r24, 0x14	; 20
  70:	8f 60       	ori	r24, 0x0F	; 15
  72:	84 bb       	out	0x14, r24	; 20
  74:	80 e0       	ldi	r24, 0x00	; 0
main():
d:\Github\AVR-Projects\0.Assignments\2.Interfacing\1.IO Ports\6.7Segments_Button\7Segment_button/main.c:31
{
    uint8_t counter = 0;
    Dio_Init();
    while (1)
    {
        if( PIND & (1<<PD4) )
  76:	84 9b       	sbis	0x10, 4	; 16
  78:	fe cf       	rjmp	.-4      	; 0x76 <main+0xa>
d:\Github\AVR-Projects\0.Assignments\2.Interfacing\1.IO Ports\6.7Segments_Button\7Segment_button/main.c:33
        {
            counter++;
  7a:	8f 5f       	subi	r24, 0xFF	; 255
d:\Github\AVR-Projects\0.Assignments\2.Interfacing\1.IO Ports\6.7Segments_Button\7Segment_button/main.c:34
            counter = counter == 10? 0 : counter;
  7c:	8a 30       	cpi	r24, 0x0A	; 10
  7e:	09 f4       	brne	.+2      	; 0x82 <main+0x16>
  80:	80 e0       	ldi	r24, 0x00	; 0
d:\Github\AVR-Projects\0.Assignments\2.Interfacing\1.IO Ports\6.7Segments_Button\7Segment_button/main.c:35
            PORTC = counter;
  82:	85 bb       	out	0x15, r24	; 21
d:\Github\AVR-Projects\0.Assignments\2.Interfacing\1.IO Ports\6.7Segments_Button\7Segment_button/main.c:36
            while( PIND & (1<<PD4) );
  84:	84 99       	sbic	0x10, 4	; 16
  86:	fe cf       	rjmp	.-4      	; 0x84 <main+0x18>
  88:	f6 cf       	rjmp	.-20     	; 0x76 <main+0xa>

0000008a <Dio_Init>:
Dio_Init():
d:\Github\AVR-Projects\0.Assignments\2.Interfacing\1.IO Ports\6.7Segments_Button\7Segment_button/main.c:51
 * @version 0.1
 * @author Ahmed Mohamed (ahmed.mohamed.eng.25@gmail.com)
 */
void Dio_Init(){
    // Port D pin 4 as input
    DDRD &= ~(1<<PD4);
  8a:	8c 98       	cbi	0x11, 4	; 17
d:\Github\AVR-Projects\0.Assignments\2.Interfacing\1.IO Ports\6.7Segments_Button\7Segment_button/main.c:54

    // port C first 4 pins as output
    DDRC |= 0x0F;
  8c:	84 b3       	in	r24, 0x14	; 20
  8e:	8f 60       	ori	r24, 0x0F	; 15
  90:	84 bb       	out	0x14, r24	; 20
d:\Github\AVR-Projects\0.Assignments\2.Interfacing\1.IO Ports\6.7Segments_Button\7Segment_button/main.c:56

  92:	08 95       	ret

00000094 <_exit>:
_exit():
  94:	f8 94       	cli

00000096 <__stop_program>:
__stop_program():
  96:	ff cf       	rjmp	.-2      	; 0x96 <__stop_program>
