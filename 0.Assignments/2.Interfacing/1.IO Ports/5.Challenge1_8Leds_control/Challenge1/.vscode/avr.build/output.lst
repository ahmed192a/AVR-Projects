
d:\Github\AVR-Projects\0.Assignments\2.Interfacing\1.IO Ports\5.Challenge1_8Leds_control\Challenge1\.vscode\avr.build\output.elf:     file format elf32-avr


Disassembly of section .text:

00000000 <__vectors>:
__vector_default():
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
__ctors_end():
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 4e 00 	jmp	0x9c	; 0x9c <_exit>

00000068 <__bad_interrupt>:
__vector_20():
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
Dio_Init():
d:\Github\AVR-Projects\0.Assignments\2.Interfacing\1.IO Ports\5.Challenge1_8Leds_control\Challenge1/main.c:45


void Dio_Init(void)
{
    // PORTC all as output
    DDRC = 0xFF;
  6c:	8f ef       	ldi	r24, 0xFF	; 255
  6e:	84 bb       	out	0x14, r24	; 20
d:\Github\AVR-Projects\0.Assignments\2.Interfacing\1.IO Ports\5.Challenge1_8Leds_control\Challenge1/main.c:47
    // initialize PORTC with 0
    PORTC = 0x00;
  70:	15 ba       	out	0x15, r1	; 21
  72:	81 e0       	ldi	r24, 0x01	; 1
_delay_loop_2():
c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h:105
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  74:	49 e1       	ldi	r20, 0x19	; 25
  76:	50 e0       	ldi	r21, 0x00	; 0
Dio_Init():
d:\Github\AVR-Projects\0.Assignments\2.Interfacing\1.IO Ports\5.Challenge1_8Leds_control\Challenge1/main.c:47
  78:	28 2f       	mov	r18, r24
main():
d:\Github\AVR-Projects\0.Assignments\2.Interfacing\1.IO Ports\5.Challenge1_8Leds_control\Challenge1/main.c:34
{
    uint8_t Leds = 1;
    Dio_Init();
    while (1) 
    {
        PORTC = Leds;
  7a:	25 bb       	out	0x15, r18	; 21
  7c:	88 e8       	ldi	r24, 0x88	; 136
  7e:	93 e1       	ldi	r25, 0x13	; 19
_delay_loop_2():
c:/winavr-20100110/lib/gcc/../../avr/include/util/delay_basic.h:105
  80:	fa 01       	movw	r30, r20
  82:	31 97       	sbiw	r30, 0x01	; 1
  84:	f1 f7       	brne	.-4      	; 0x82 <main+0x16>
_delay_ms():
c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h:124
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  86:	01 97       	sbiw	r24, 0x01	; 1
c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h:120
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  88:	d9 f7       	brne	.-10     	; 0x80 <main+0x14>
main():
d:\Github\AVR-Projects\0.Assignments\2.Interfacing\1.IO Ports\5.Challenge1_8Leds_control\Challenge1/main.c:36
        _delay_ms(500);
        Leds = Leds << 1;
  8a:	82 2f       	mov	r24, r18
  8c:	88 0f       	add	r24, r24
  8e:	21 e0       	ldi	r18, 0x01	; 1
d:\Github\AVR-Projects\0.Assignments\2.Interfacing\1.IO Ports\5.Challenge1_8Leds_control\Challenge1/main.c:37
        Leds = Leds == 0? 1 : Leds;
  90:	99 f7       	brne	.-26     	; 0x78 <main+0xc>
  92:	f3 cf       	rjmp	.-26     	; 0x7a <main+0xe>

00000094 <Dio_Init>:
Dio_Init():
d:\Github\AVR-Projects\0.Assignments\2.Interfacing\1.IO Ports\5.Challenge1_8Leds_control\Challenge1/main.c:45


void Dio_Init(void)
{
    // PORTC all as output
    DDRC = 0xFF;
  94:	8f ef       	ldi	r24, 0xFF	; 255
  96:	84 bb       	out	0x14, r24	; 20
d:\Github\AVR-Projects\0.Assignments\2.Interfacing\1.IO Ports\5.Challenge1_8Leds_control\Challenge1/main.c:47
    // initialize PORTC with 0
    PORTC = 0x00;
  98:	15 ba       	out	0x15, r1	; 21
d:\Github\AVR-Projects\0.Assignments\2.Interfacing\1.IO Ports\5.Challenge1_8Leds_control\Challenge1/main.c:48
  9a:	08 95       	ret

0000009c <_exit>:
_exit():
  9c:	f8 94       	cli

0000009e <__stop_program>:
__stop_program():
  9e:	ff cf       	rjmp	.-2      	; 0x9e <__stop_program>
