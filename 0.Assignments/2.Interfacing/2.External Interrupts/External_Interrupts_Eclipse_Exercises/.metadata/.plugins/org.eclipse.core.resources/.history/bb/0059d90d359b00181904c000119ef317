/*
 * Exercise2.c
 *
 * Created: 12/7/2013 9:08:25 PM
 * Author: Mohamed Tarek
 */ 

#include <avr/io.h>
#include <util/delay.h>
#include <avr/interrupt.h>

unsigned char g_Interrupt_Flag = 0;

/* External INT1 Interrupt Service Routine */
ISR(INT1_vect)
{
	unsigned char Loop_idx;
	for(Loop_idx = 0 ; Loop_idx < 5 ; Loop_idx++)
	{
		PORTC = 0xFF;
		_delay_ms(500);
		PORTC = 0x00;
		_delay_ms(500);
	}
}

/* External INT1 enable and configuration function */
void INT1_Init(void)
{
	SREG  &= ~(1<<7);      // Disable interrupts by clearing I-bit
	DDRD  &= (~(1<<PD3));  // Configure INT1/PD3 as input pin
	PORTD |= (1<<PD3);     // Enable the internal pull up resistor at PD3 pin
	GICR  |= (1<<INT1);    // Enable external interrupt pin INT1
	// Trigger INT1 with the falling edge
	MCUCR |= (1<<ISC11);
	MCUCR &= ~(1<<ISC10);
	SREG  |= (1<<7);       // Enable interrupts by setting I-bit
}

int main(void)
{
	INT1_Init();           // Enable and configure external INT1

	DDRC  = 0xFF;          // Configure all PORTC pins as output pins
	PORTC = 0x01;          // First led is on at the beginning (Positive Logic configuration)

	while(1)
	{
		_delay_ms(500);
		PORTC = (PORTC<<1); //every time only one led is ON
		if(PORTC == 0x00)
		{
			PORTC = 0x01;
		}
	}
}
