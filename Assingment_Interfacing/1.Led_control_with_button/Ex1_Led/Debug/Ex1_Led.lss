
Ex1_Led.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000f4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         0000036c  00000000  00000000  00000148  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      0000068d  00000000  00000000  000004b4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 78 00 	jmp	0xf0	; 0xf0 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:

/**
 * @brief main function
 * @return int
 */
int main(){
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
	DIO_init();
  74:	0e 94 55 00 	call	0xaa	; 0xaa <DIO_init>

	while(1){
        // if button is pressed
        if(PINA & (1<<3)){
  78:	e9 e3       	ldi	r30, 0x39	; 57
  7a:	f0 e0       	ldi	r31, 0x00	; 0
  7c:	80 81       	ld	r24, Z
  7e:	88 2f       	mov	r24, r24
  80:	90 e0       	ldi	r25, 0x00	; 0
  82:	88 70       	andi	r24, 0x08	; 8
  84:	90 70       	andi	r25, 0x00	; 0
  86:	00 97       	sbiw	r24, 0x00	; 0
  88:	41 f0       	breq	.+16     	; 0x9a <main+0x2e>
            PORTC |= (1<<5);    // PORTC Pin 5 High
  8a:	a5 e3       	ldi	r26, 0x35	; 53
  8c:	b0 e0       	ldi	r27, 0x00	; 0
  8e:	e5 e3       	ldi	r30, 0x35	; 53
  90:	f0 e0       	ldi	r31, 0x00	; 0
  92:	80 81       	ld	r24, Z
  94:	80 62       	ori	r24, 0x20	; 32
  96:	8c 93       	st	X, r24
  98:	ef cf       	rjmp	.-34     	; 0x78 <main+0xc>
        }
        else{
            PORTC &= ~(1<<5);   // PORTC Pin 5 Low
  9a:	a5 e3       	ldi	r26, 0x35	; 53
  9c:	b0 e0       	ldi	r27, 0x00	; 0
  9e:	e5 e3       	ldi	r30, 0x35	; 53
  a0:	f0 e0       	ldi	r31, 0x00	; 0
  a2:	80 81       	ld	r24, Z
  a4:	8f 7d       	andi	r24, 0xDF	; 223
  a6:	8c 93       	st	X, r24
  a8:	e7 cf       	rjmp	.-50     	; 0x78 <main+0xc>

000000aa <DIO_init>:
}

/**
 * @brief DIO_init function
 */
void DIO_init(){
  aa:	df 93       	push	r29
  ac:	cf 93       	push	r28
  ae:	cd b7       	in	r28, 0x3d	; 61
  b0:	de b7       	in	r29, 0x3e	; 62
    DDRA &= ~(1<<3);    // PORTA Pin 3 Input
  b2:	aa e3       	ldi	r26, 0x3A	; 58
  b4:	b0 e0       	ldi	r27, 0x00	; 0
  b6:	ea e3       	ldi	r30, 0x3A	; 58
  b8:	f0 e0       	ldi	r31, 0x00	; 0
  ba:	80 81       	ld	r24, Z
  bc:	87 7f       	andi	r24, 0xF7	; 247
  be:	8c 93       	st	X, r24
    PORTA &= ~(1<<3);   // PORTA Pin 3 Pull down
  c0:	ab e3       	ldi	r26, 0x3B	; 59
  c2:	b0 e0       	ldi	r27, 0x00	; 0
  c4:	eb e3       	ldi	r30, 0x3B	; 59
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	80 81       	ld	r24, Z
  ca:	87 7f       	andi	r24, 0xF7	; 247
  cc:	8c 93       	st	X, r24

    DDRC |= (1<<5);	    // PORTC Pin 5 Output
  ce:	a4 e3       	ldi	r26, 0x34	; 52
  d0:	b0 e0       	ldi	r27, 0x00	; 0
  d2:	e4 e3       	ldi	r30, 0x34	; 52
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	80 81       	ld	r24, Z
  d8:	80 62       	ori	r24, 0x20	; 32
  da:	8c 93       	st	X, r24
    PORTC &= ~(1<<5);   // PORTC Pin 5 Low initially
  dc:	a5 e3       	ldi	r26, 0x35	; 53
  de:	b0 e0       	ldi	r27, 0x00	; 0
  e0:	e5 e3       	ldi	r30, 0x35	; 53
  e2:	f0 e0       	ldi	r31, 0x00	; 0
  e4:	80 81       	ld	r24, Z
  e6:	8f 7d       	andi	r24, 0xDF	; 223
  e8:	8c 93       	st	X, r24
}
  ea:	cf 91       	pop	r28
  ec:	df 91       	pop	r29
  ee:	08 95       	ret

000000f0 <_exit>:
  f0:	f8 94       	cli

000000f2 <__stop_program>:
  f2:	ff cf       	rjmp	.-2      	; 0xf2 <__stop_program>
