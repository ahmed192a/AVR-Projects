
d:\Github\AVR-Projects\Assingment_Interfacing\1.Led_control_with_button\Led_Project\.vscode\avr.build\output.elf:     file format elf32-avr


Disassembly of section .text:

00000000 <__vectors>:
__vector_default():
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
__ctors_end():
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 3b 00 	call	0x76	; 0x76 <main>
  64:	0c 94 43 00 	jmp	0x86	; 0x86 <_exit>

00000068 <__bad_interrupt>:
__vector_20():
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_init>:
DIO_init():
d:\Github\AVR-Projects\Assingment_Interfacing\1.Led_control_with_button\Led_Project/main.c:44

/**
 * @brief DIO_init function
 */
void DIO_init(){
    DDRA &= ~(1<<3);    // PORTA Pin 3 Input
  6c:	d3 98       	cbi	0x1a, 3	; 26
d:\Github\AVR-Projects\Assingment_Interfacing\1.Led_control_with_button\Led_Project/main.c:45
    PORTA &= ~(1<<3);   // PORTA Pin 3 Pull down
  6e:	db 98       	cbi	0x1b, 3	; 27
d:\Github\AVR-Projects\Assingment_Interfacing\1.Led_control_with_button\Led_Project/main.c:47

    DDRC |= (1<<5);	    // PORTC Pin 5 Output
  70:	a5 9a       	sbi	0x14, 5	; 20
d:\Github\AVR-Projects\Assingment_Interfacing\1.Led_control_with_button\Led_Project/main.c:48
    PORTC &= ~(1<<5);   // PORTC Pin 5 Low initially
  72:	ad 98       	cbi	0x15, 5	; 21
d:\Github\AVR-Projects\Assingment_Interfacing\1.Led_control_with_button\Led_Project/main.c:49
}
  74:	08 95       	ret

00000076 <main>:
main():
d:\Github\AVR-Projects\Assingment_Interfacing\1.Led_control_with_button\Led_Project/main.c:25
 * 
 * @date 2022-09-17 @ 18:09:51
 * @author Ahmed Mohamed
 */
int main(){
	DIO_init();
  76:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_init>
d:\Github\AVR-Projects\Assingment_Interfacing\1.Led_control_with_button\Led_Project/main.c:29

	while(1){
        // if button is pressed
        if(PINA & (1<<3)){
  7a:	cb 9b       	sbis	0x19, 3	; 25
  7c:	02 c0       	rjmp	.+4      	; 0x82 <main+0xc>
d:\Github\AVR-Projects\Assingment_Interfacing\1.Led_control_with_button\Led_Project/main.c:30
            PORTC |= (1<<5);    // PORTC Pin 5 High
  7e:	ad 9a       	sbi	0x15, 5	; 21
  80:	fc cf       	rjmp	.-8      	; 0x7a <main+0x4>
d:\Github\AVR-Projects\Assingment_Interfacing\1.Led_control_with_button\Led_Project/main.c:33
        }
        else{
            PORTC &= ~(1<<5);   // PORTC Pin 5 Low
  82:	ad 98       	cbi	0x15, 5	; 21
  84:	fa cf       	rjmp	.-12     	; 0x7a <main+0x4>

00000086 <_exit>:
_exit():
  86:	f8 94       	cli

00000088 <__stop_program>:
__stop_program():
  88:	ff cf       	rjmp	.-2      	; 0x88 <__stop_program>
